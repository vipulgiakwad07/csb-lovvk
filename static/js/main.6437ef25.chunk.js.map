{"version":3,"sources":["App.js","index.js"],"names":["App","useWindowSize","width","height","useState","board","setBoard","decideWinner","lines","i","length","a","b","c","console","log","isXTurn","setIsXTurn","winner","className","onClick","map","value","index","Box","onPlayerClick","boardCopy","handleClick","props","style","color","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oNAMe,SAASA,IACtB,MAA0BC,MAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACf,EAA0BC,mBAAS,CACjC,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OATF,mBAAOC,EAAP,KAAcC,EAAd,KAYMC,EAAe,SAACF,GAYpB,IAXA,IAAMG,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAiB,OAAbR,EAAMM,IAAeN,EAAMM,KAAON,EAAMO,IAAMP,EAAMO,KAAOP,EAAMQ,GAEnE,OADAC,QAAQC,IAAI,iBAAkBV,EAAMM,IAC7BN,EAAMM,GAGjB,IAAK,IAAIF,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GACER,EAAM,IACNA,EAAM,IACNA,EAAM,IACNA,EAAM,IACNA,EAAM,IACNA,EAAM,IACNA,EAAM,IACNA,EAAM,IACO,OAAbA,EAAM,KACJA,EAAMM,KAAON,EAAMO,IAAMP,EAAMO,KAAOP,EAAMQ,IAG9C,OAiEC,sCA9DL,OAAO,MAGTN,EAAaF,GAEb,MAA8BD,oBAAS,GAAvC,mBAAOY,EAAP,KAAgBC,EAAhB,KACMC,EAASX,EAAaF,GAkB5B,OACE,sBAAKc,UAAU,MAAf,UACE,uEAEA,6CACA,8BACE,wBAAQC,QAXE,WACdd,EAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAC1DW,GAAW,IASP,wBAEF,8DAECC,EAAS,kDAAqBA,KAAe,IAE7CA,EAAS,cAAC,IAAD,CAAUhB,MAAOA,EAAOC,OAAQA,IAAa,GAEvD,qBAAKgB,UAAU,QAAf,SACGd,EAAMgB,KAAI,SAACC,EAAOC,GAAR,OACT,cAACC,EAAD,CAAKF,MAAOA,EAAOG,cAAe,kBAhCtB,SAACF,GAGnB,GAFAT,QAAQC,IAAI,UAAWQ,GAER,OAAXL,GAAoC,OAAjBb,EAAMkB,GAAiB,CAC5C,IAAIG,EAAS,YAAOrB,GACpBqB,EAAUH,GAASP,EAAU,IAAM,IACnCV,EAASoB,GACTT,GAAYD,IAyBgCW,CAAYJ,cAO9D,SAASC,EAAII,GAEX,OACE,qBAEER,QAASQ,EAAMH,cACfI,MAAO,CAAEC,MAAuB,MAAhBF,EAAMN,MAAgB,OAAS,WAC/CH,UAAU,WAJZ,SAMGS,EAAMN,QC5Gb,IAAMS,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACnC,EAAD,MAEF+B,K","file":"static/js/main.6437ef25.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\n\nimport \"./styles.css\";\n\nexport default function App() {\n  const { width, height } = useWindowSize();\n  const [board, setBoard] = useState([\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null\n  ]);\n\n  const decideWinner = (board) => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [2, 4, 6],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [6, 7, 8],\n      [0, 4, 8]\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (board[a] !== null && board[a] === board[b] && board[b] === board[c]) {\n        console.log(\"The winner is \", board[a]);\n        return board[a];\n      }\n    }\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        board[0] &&\n        board[1] &&\n        board[2] &&\n        board[3] &&\n        board[4] &&\n        board[5] &&\n        board[6] &&\n        board[7] &&\n        board[8] !== null &&\n        !(board[a] === board[b] && board[b] === board[c])\n      ) {\n        // console.log(\"The winner is \", board[a]);\n        return draw();\n      }\n    }\n    return null;\n  };\n\n  decideWinner(board);\n\n  const [isXTurn, setIsXTurn] = useState(true);\n  const winner = decideWinner(board);\n\n  const handleClick = (index) => {\n    console.log(\"clicked\", index);\n\n    if (winner === null && board[index] === null) {\n      let boardCopy = [...board];\n      boardCopy[index] = isXTurn ? \"X\" : \"O\";\n      setBoard(boardCopy);\n      setIsXTurn(!isXTurn);\n    }\n  };\n\n  const restart = () => {\n    setBoard([null, null, null, null, null, null, null, null, null]);\n    setIsXTurn(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>--ðŸ˜€ Welcome ðŸ˜€--</h1>\n\n      <h1>Tic tac toe</h1>\n      <div>\n        <button onClick={restart}>Restart </button>\n      </div>\n      <h2>Player X will start the Game</h2>\n\n      {winner ? <h2>The winner is : {winner}</h2> : \" \"}\n\n      {winner ? <Confetti width={width} height={height} /> : \"\"}\n\n      <div className=\"board\">\n        {board.map((value, index) => (\n          <Box value={value} onPlayerClick={() => handleClick(index)} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction Box(props) {\n  //const [value, setValue] = useState(null);\n  return (\n    <div\n      // onClick={() => setValue(props.value === \"X\" ? \"o\" : \"X\")}\n      onClick={props.onPlayerClick}\n      style={{ color: props.value === \"X\" ? \"blue\" : \"crimson\" }}\n      className=\"game-box\"\n    >\n      {props.value}\n    </div>\n  );\n}\n\nfunction draw() {\n  return <h2>draw</h2>;\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}